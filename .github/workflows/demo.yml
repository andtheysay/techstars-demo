name: TechStars Demo

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          if [ -f pyproject.toml ]; then poetry install ; fi
      - name: flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test Flask App
        run: |
          mv data/cdeschools.sqlite.z src/cdeschools.sqlite
          gunicorn --bind 127.0.0.1:5000 --chdir src app:app &
          pytest
          killall gunicorn
      - name: Install Docker dependencies (podman and buildah)
        run: |
          sudo apt-get -y update
          sudo apt-get -y install podman buildah
          sudo pip install podman-compose
          printf "[registries.search]\nregistries = ['docker.io']" > registries.conf
      - name: Build Docker image from Dockerfile
        run: |
          poetry export -f requirements.txt --output requirements.txt
          buildah bud -t techstars-demo
      - name: Test Docker image
        run: |
          podman run -d -p 5000:5000 techstars-demo
          pytest
          podman kill -a
      - name: Push Docker image to Github Container Registry
        run: |
          buildah login -u andtheysay -p $GH_TOKEN docker.pkg.github.com
          buildah push techstars-demo docker.pkg.github.com/andtheysay/techstars-demo/techstars-demo:latest
         